def MaxCohenNoiseContriteTFT(mymoves, othermoves, currentRound):
  state = 1 #will be used to keep track of the state that TFT is in (contrite/ provoked/ content, correspond to 1, 2, 3)
  pattern = [False, False, False, False, False, True, False, True, False, False]
  patternchecker = 0

  if currentRound >= 10:
    patternchecker = 0
    for i in range(10):
      if pattern[i] == othermoves[i]:
        patternchecker = patternchecker + 1

    if patternchecker >= 9:
      return True
    else:
      #if len(othermoves == 10):
        #return False
        #state = 1
      if mymoves[-1] is True and state == 1:
        return False
        state = 3
      elif othermoves[-1] is True and state == 1:
        return True
        state = 2
      elif othermoves[-1] is False and state == 1:
        return False
      elif othermoves[-1] is True and state == 2:
        return True
        state = 2
      elif othermoves[-1] is False and state == 2:
        return False
        state = 1
      elif othermoves[-1] and state == 3:
        return False
        state = 1
      else :
        return False
        state = 3
  else:
    for i in range (10):
      return pattern[i]


def MaxCohenNoiseGTFT(mymoves, othermoves, currentRound):
  pattern = [False, False, False, False, False, True, False, True, False, False]
  patternchecker = 0

  if currentRound >= 10:
    patternchecker = 0
    for i in range(10):
      if pattern[i] == othermoves[i]:
        patternchecker = patternchecker + 1

    if patternchecker >= 9:
      return True
    else:
      if len(othermoves) == 0:
        return False
      if othermoves[-1] is True:
        if random.randint(1,10) == 1:
          return False
      else:
        return True
  else:
    for i in range(10):
      return pattern[i]


def MaxCohenNoiseFeeder1(mymoves, othermoves, currentRound):
  pattern = [False, False, False, False, False, True, False, True, False, False]

  if currentRound >= 10:
    patternchecker = 0
    for i in range(10):
      if pattern[i] == othermoves[i]:
        patternchecker = patternchecker + 1

    if patternchecker >= 9:
      return False
    else:
      return True
  else: # this means that currentRound <= 10
    return pattern[currentRound]


def MaxCohenNoiseFeeder2(mymoves, othermoves, currentRound):
  pattern = [False, False, False, False, False, True, False, True, False, False]

  if currentRound >= 10:
    patternchecker = 0
    for i in range(10):
      if pattern[i] == othermoves[i]:
        patternchecker = patternchecker + 1

    if patternchecker >= 9:
      return False
    else:
      return True
  else: # this means that currentRound <= 10
    return pattern[currentRound]


def MaxCohenNoiseFeeder3(mymoves, othermoves, currentRound):
  pattern = [False, False, False, False, False, True, False, True, False, False]

  if currentRound >= 10:
    patternchecker = 0
    for i in range(10):
      if pattern[i] == othermoves[i]:
        patternchecker = patternchecker + 1

    if patternchecker >= 9:
      return False
    else:
      return True
  else: # this means that currentRound <= 10
    return pattern[currentRound]


def MaxCohenNoiseFeeder4(mymoves, othermoves, currentRound):
  pattern = [False, False, False, False, False, True, False, True, False, False]

  if currentRound >= 10:
    patternchecker = 0
    for i in range(10):
      if pattern[i] == othermoves[i]:
        patternchecker = patternchecker + 1

    if patternchecker >= 9:
      return False
    else:
      return True
  else: # this means that currentRound <= 10
    return pattern[currentRound]


def MaxCohenNoiseFeeder5(mymoves, othermoves, currentRound):
  pattern = [False, False, False, False, False, True, False, True, False, False]

  if currentRound >= 10:
    patternchecker = 0
    for i in range(10):
      if pattern[i] == othermoves[i]:
        patternchecker = patternchecker + 1

    if patternchecker >= 9:
      return False
    else:
      return True
  else: # this means that currentRound <= 10
    return pattern[currentRound]


def MaxCohenNoiseFeeder6(mymoves, othermoves, currentRound):
  pattern = [False, False, False, False, False, True, False, True, False, False]

  if currentRound >= 10:
    patternchecker = 0
    for i in range(10):
      if pattern[i] == othermoves[i]:
        patternchecker = patternchecker + 1

    if patternchecker >= 9:
      return False
    else:
      return True
  else: # this means that currentRound <= 10
    return pattern[currentRound]


def MaxCohenNoiseFeeder7(mymoves, othermoves, currentRound):
  pattern = [False, False, False, False, False, True, False, True, False, False]

  if currentRound >= 10:
    patternchecker = 0
    for i in range(10):
      if pattern[i] == othermoves[i]:
        patternchecker = patternchecker + 1

    if patternchecker >= 9:
      return False
    else:
      return True
  else: # this means that currentRound <= 10
    return pattern[currentRound]



def MaxCohenNoiseFeeder8(mymoves, othermoves, currentRound):
  pattern = [False, False, False, False, False, True, False, True, False, False]

  if currentRound >= 10:
    patternchecker = 0
    for i in range(10):
      if pattern[i] == othermoves[i]:
        patternchecker = patternchecker + 1

    if patternchecker >= 9:
      return False
    else:
      return True
  else: # this means that currentRound <= 10
    return pattern[currentRound]