def LeoStollTFTTExploiterWithNPavlovTFTnoise(mymoves, othermoves, currentRound):
  mainHandshake = [True, False, True, True, True, False, False, True, False]
  feederHandshake = [True, True, False, False, True, True, True, False, False]
  TFT = 0
  TFTT = 0
  probe1 = 0
  probe2 = 0
  coopChance = 1

  if currentRound < len(mainHandshake):
    return mainHandshake[currentRound]

  if currentRound > len(mainHandshake):
    for i in range(len(mainHandshake)):
      if mainHandshake[i] == othermoves[i]:
        #probe ++
        probe1 += 1
  if probe1 >= (len(mainHandshake) - 2):
    return False

  if currentRound > len(feederHandshake):
    for i in range(len(feederHandshake)):
      if feederHandshake[i] == othermoves[i]:
        #probe ++
        probe2 += 1
  if probe2 >= (len(feederHandshake) - 2):
    return True
    
  if any((not othermoves[i-4] and othermoves[i-3] and not othermoves[i-2] and othermoves[i-1]) for i in range(len(othermoves)-4)):
    return True 
  if othermoves[-4] and othermoves[-3] and othermoves[-2] and othermoves[-1]:
      return True
  else:
    for i in range(currentRound-1):
      if (mymoves[i] == True) and (othermoves[i+1] == True):
        TFT += 1
      if (mymoves[i] == True) and (othermoves[i+1] == False):
        TFTT += 1
    if (TFTT > TFT * 0.25) and (currentRound >= 10):
      if currentRound % 2 == 1:
        return False
      else:
        return True
    else:
      for i in range(len(othermoves)):
          # Reward
          if (mymoves[i] == False) and (othermoves[i] == False):
              coopChance += np.clip((1 / (i + 1)), 0, 1)

          # Punish
          if (mymoves[i] == True) and (othermoves[i] == True):
              coopChance -= np.clip((1 / (i + 1)), 0, 1)

          # Tempt
          if (mymoves[i] == True) and (othermoves[i] == False):
              coopChance += np.clip((2 / (i + 1)), 0, 1)

          # Sucker
          if (mymoves[i] == False) and (othermoves[i] == True):
              coopChance -= np.clip((2 / (i + 1)), 0, 1)
      if np.random.rand() < coopChance:
        return False
      else:
        return True

def LeoStollTFTTExploiterWithNPavlovTFTnoiseFeeder1(mymoves, othermoves, currentRound):
  mainHandshake = [True, False, True, True, True, False, False, True, False]
  feederHandshake = [True, True, False, False, True, True, True, False, False]
  probe = 0

  if currentRound < len(feederHandshake):
    return feederHandshake[currentRound]

  if currentRound > len(mainHandshake):
    for i in range(len(mainHandshake)):
      if othermoves[i] == mainHandshake[i]:
        #probe ++
        probe += 1
  if probe >= (len(mainHandshake) - 2):
    return False
  else:
    return True

def LeoStollTFTTExploiterWithNPavlovTFTnoiseFeeder2(mymoves, othermoves, currentRound):
  mainHandshake = [True, False, True, True, True, False, False, True, False]
  feederHandshake = [True, True, False, False, True, True, True, False, False]
  probe = 0

  if currentRound < len(feederHandshake):
    return feederHandshake[currentRound]

  if currentRound > len(mainHandshake):
    for i in range(len(mainHandshake)):
      if othermoves[i] == mainHandshake[i]:
        #probe ++
        probe += 1
  if probe >= (len(mainHandshake) - 2):
    return False
  else:
    return True

def LeoStollTFTTExploiterWithNPavlovTFTnoiseFeeder3(mymoves, othermoves, currentRound):
  mainHandshake = [True, False, True, True, True, False, False, True, False]
  feederHandshake = [True, True, False, False, True, True, True, False, False]
  probe = 0

  if currentRound < len(feederHandshake):
    return feederHandshake[currentRound]

  if currentRound > len(mainHandshake):
    for i in range(len(mainHandshake)):
      if othermoves[i] == mainHandshake[i]:
        #probe ++
        probe += 1
  if probe >= (len(mainHandshake) - 2):
    return False
  else:
    return True

def LeoStollTFTTExploiterWithNPavlovTFTnoiseFeeder4(mymoves, othermoves, currentRound):
  mainHandshake = [True, False, True, True, True, False, False, True, False]
  feederHandshake = [True, True, False, False, True, True, True, False, False]
  probe = 0

  if currentRound < len(feederHandshake):
    return feederHandshake[currentRound]

  if currentRound > len(mainHandshake):
    for i in range(len(mainHandshake)):
      if othermoves[i] == mainHandshake[i]:
        #probe ++
        probe += 1
  if probe >= (len(mainHandshake) - 2):
    return False
  else:
    return True

def LeoStollTFTTExploiterWithNPavlovTFTnoiseFeeder5(mymoves, othermoves, currentRound):
  mainHandshake = [True, False, True, True, True, False, False, True, False]
  feederHandshake = [True, True, False, False, True, True, True, False, False]
  probe = 0

  if currentRound < len(feederHandshake):
    return feederHandshake[currentRound]

  if currentRound > len(mainHandshake):
    for i in range(len(mainHandshake)):
      if othermoves[i] == mainHandshake[i]:
        #probe ++
        probe += 1
  if probe >= (len(mainHandshake) - 2):
    return False
  else:
    return True

def LeoStollTFTTExploiterWithNPavlovTFTnoiseFeeder6(mymoves, othermoves, currentRound):
  mainHandshake = [True, False, True, True, True, False, False, True, False]
  feederHandshake = [True, True, False, False, True, True, True, False, False]
  probe = 0

  if currentRound < len(feederHandshake):
    return feederHandshake[currentRound]

  if currentRound > len(mainHandshake):
    for i in range(len(mainHandshake)):
      if othermoves[i] == mainHandshake[i]:
        #probe ++
        probe += 1
  if probe >= (len(mainHandshake) - 2):
    return False
  else:
    return True

def LeoStollTFTTExploiterWithNPavlovTFTnoiseFeeder7(mymoves, othermoves, currentRound):
  mainHandshake = [True, False, True, True, True, False, False, True, False]
  feederHandshake = [True, True, False, False, True, True, True, False, False]
  probe = 0

  if currentRound < len(feederHandshake):
    return feederHandshake[currentRound]

  if currentRound > len(mainHandshake):
    for i in range(len(mainHandshake)):
      if othermoves[i] == mainHandshake[i]:
        #probe ++
        probe += 1
  if probe >= (len(mainHandshake) - 2):
    return False
  else:
    return True

def LeoStollTFTTExploiterWithNPavlovTFTnoiseFeeder8(mymoves, othermoves, currentRound):
  mainHandshake = [True, False, True, True, True, False, False, True, False]
  feederHandshake = [True, True, False, False, True, True, True, False, False]
  probe = 0

  if currentRound < len(feederHandshake):
    return feederHandshake[currentRound]

  if currentRound > len(mainHandshake):
    for i in range(len(mainHandshake)):
      if othermoves[i] == mainHandshake[i]:
        #probe ++
        probe += 1
  if probe >= (len(mainHandshake) - 2):
    return False
  else:
    return True

def LeoStollTFTTExploiterWithNPavlovTFTnoiseFeeder9(mymoves, othermoves, currentRound):
  mainHandshake = [True, False, True, True, True, False, False, True, False]
  feederHandshake = [True, True, False, False, True, True, True, False, False]
  probe = 0

  if currentRound < len(feederHandshake):
    return feederHandshake[currentRound]

  if currentRound > len(mainHandshake):
    for i in range(len(mainHandshake)):
      if othermoves[i] == mainHandshake[i]:
        #probe ++
        probe += 1
  if probe >= (len(mainHandshake) - 2):
    return False
  else:
    return True