def TarynHwangTitForTat(mymoves, othermoves, currentRound): #no-noise
  if len(othermoves) == 0:
    return False
  if othermoves[-1]:
    return True
  else:
    return False
 
def TarynHwangTitForTwoTats(mymoves, othermoves, currentRound): #both
  if len(othermoves) == 0:
    return False
  if len(othermoves) >= 2 and (othermoves[-1] and othermoves[-2]):
    return True
  else:
    return False
 
def TarynHwangTwoTitsforTat(mymoves, othermoves, currentRound): #no-noise
  if len(othermoves) == 0:
    return False
  if len(othermoves) >= 2 and (othermoves[-1] or othermoves[-2]):
    return True
  else:
    return False
 
def TarynHwang_Cooperate_Nuke_TwoInARow(mymoves, othermoves, currentRound): #noise
  tats = 2
  for i in range(currentRound):
    if i + tats - 1 < currentRound and all(othermoves[i:i+tats]):
      return True
  return False