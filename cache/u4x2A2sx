def HarrisonQianLevelMaster(mymoves, othermoves, currentRound):
  def all_false(arr):
    return all(not value for value in arr)
  length = 5
  master_key = [False] * length
  bot_key = [True, True, False, False, False]
  if currentRound < length:
    return False
  if othermoves[:length] == bot_key and all_false(othermoves[length:]):
    return True
  if sum(othermoves)/len(othermoves) > 0.2:
    return True
  return False

def HarrisonQianLevelFeeder1(mymoves, othermoves, currentRound):
  length = 5
  master_key = [False] * 5
  bot_key = [True, True, False, False, False]
  if currentRound < length:
    return bot_key[currentRound]
  if othermoves[:length] == master_key:
    return False
  return True

def HarrisonQianLevelFeeder2(mymoves, othermoves, currentRound):
  length = 5
  master_key = [False] * 5
  bot_key = [True, True, False, False, False]
  if currentRound < length:
    return bot_key[currentRound]
  if othermoves[:length] == master_key:
    return False
  return True

def HarrisonQianLevelFeeder3(mymoves, othermoves, currentRound):
  length = 5
  master_key = [False] * 5
  bot_key = [True, True, False, False, False]
  if currentRound < length:
    return bot_key[currentRound]
  if othermoves[:length] == master_key:
    return False
  return True

def HarrisonQianLevelFeeder4(mymoves, othermoves, currentRound):
  length = 5
  master_key = [False] * 5
  bot_key = [True, True, False, False, False]
  if currentRound < length:
    return bot_key[currentRound]
  if othermoves[:length] == master_key:
    return False
  return True

def HarrisonQianLevelFeeder5(mymoves, othermoves, currentRound):
  length = 5
  master_key = [False] * 5
  bot_key = [True, True, False, False, False]
  if currentRound < length:
    return bot_key[currentRound]
  if othermoves[:length] == master_key:
    return False
  return True

def HarrisonQianLevelFeeder6(mymoves, othermoves, currentRound):
  length = 5
  master_key = [False] * 5
  bot_key = [True, True, False, False, False]
  if currentRound < length:
    return bot_key[currentRound]
  if othermoves[:length] == master_key:
    return False
  return True

def HarrisonQianLevelFeeder7(mymoves, othermoves, currentRound):
  length = 5
  master_key = [False] * 5
  bot_key = [True, True, False, False, False]
  if currentRound < length:
    return bot_key[currentRound]
  if othermoves[:length] == master_key:
    return False
  return True

def HarrisonQianLevelFeeder8(mymoves, othermoves, currentRound):
  length = 5
  master_key = [False] * 5
  bot_key = [True, True, False, False, False]
  if currentRound < length:
    return bot_key[currentRound]
  if othermoves[:length] == master_key:
    return False
  return True

def HarrisonQianLevelFeeder9(mymoves, othermoves, currentRound):
  length = 5
  master_key = [False] * 5
  bot_key = [True, True, False, False, False]
  if currentRound < length:
    return bot_key[currentRound]
  if othermoves[:length] == master_key:
    return False
  return True