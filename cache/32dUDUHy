def JacksonLeeMasterNoise(mymoves, othermoves, currentRound):
  pattern = [False, False, True, False, False, False, True, False, True, False]
  #always betray on the last round
  if currentRound == 199:
    return True
  #handshake
  if currentRound < 10:
    return pattern[currentRound]
  else:
    negatenoise=0
    for i in range(10):
      if othermoves[i]==pattern[i]:
        negatenoise += 1
    if negatenoise >= 8:
      return True
    else:
      #in case im getting nuked
      for i in range(len(othermoves) - 5):
        if othermoves[i:i+5] == [True,True,True,True,True]:
            return True
      #in case im getting alternated
      if currentRound > 15:
        randomChecker = 0
        for a in range(10, len(othermoves)):
          if othermoves[a]:
            randomChecker+=1
          else:
            randomChecker-=1
        if abs(randomChecker) <= currentRound/20:
          return True
      #N pavlov, adjusts probability that I betray or cooperate based off our previous moves
      Pn = 0.5
      for i in range(7,currentRound):
        n=i
        if [othermoves[i]]:
          if  mymoves[i]: #punishment payoff
            Pn -= 1/n
          else: #sucker payoff
            Pn -= 2/n
        else:
          if mymoves[i]: #temptation payoff
            Pn += 2/n
          else:  #reward payoff
            Pn += 1/n
        if Pn >1:
          Pn = 1
        if Pn <0:
          Pn = 0
      if random.random() >= Pn:
        return False
      return True
def JacksonLeeAlternatorNoise(mymoves, othermoves, currentRound):
  pattern = [False, False, True, False, False, False, True, False, True, False]
  #always betray on the last round
  if currentRound == 199:
    return True
  #handshake
  if currentRound < 10:
    return pattern[currentRound]
  else:
    negatenoise=0
    for i in range(10):
      if othermoves[i]==pattern[i]:
        negatenoise += 1
    if negatenoise >= 8:
      return True
    else:
      #in case im getting nuked
      for i in range(len(othermoves) - 5):
        if othermoves[i:i+5] == [True,True,True,True,True]:
            return True
      #in case im getting alternated
      if currentRound > 15:
        randomChecker = 0
        for a in range(10, len(othermoves)):
          if othermoves[a]:
            randomChecker+=1
          else:
            randomChecker-=1
        if abs(randomChecker) <= currentRound/20:
          return True
      #random alternator
      if currentRound % 4 == 0:
        if random.randint(1,10) >= 5:
          return True
        else:
          return False
      elif currentRound % 4 == 1:
        return False
      elif currentRound % 4 == 2:
        return True
      else:
        return False
def JacksonLeePureAlternatorNoise(mymoves, othermoves, currentRound):
  pattern = [False, False, True, False, False, False, True, False, True, False]
  #always betray on the last round
  if currentRound == 199:
    return True
  #handshake
  if currentRound < 10:
    return pattern[currentRound]
  else:
    negatenoise=0
    for i in range(10):
      if othermoves[i]==pattern[i]:
        negatenoise += 1
    if negatenoise >= 8:
      return True
    else:
      #in case im getting nuked
      for i in range(len(othermoves) - 5):
        if othermoves[i:i+5] == [True,True,True,True,True]:
            return True
      #in case im getting alternated
      if currentRound > 15:
        randomChecker = 0
        for a in range(10, len(othermoves)):
          if othermoves[a]:
            randomChecker+=1
          else:
            randomChecker-=1
        if abs(randomChecker) <= currentRound/20:
          return True
      #pure alternator
      if currentRound % 2 == 1:
        return True
      return False
def JacksonLeeInterNoise1(mymoves, othermoves, currentRound):
  pattern = [False, False, True, False, False, False, True, False, True, False]
  if currentRound < 10:
    return pattern[currentRound]
  else:
    negatenoise=0
    for i in range(10):
      if othermoves[i]==pattern[i]:
        negatenoise += 1
    if negatenoise >= 8:
      return False
    else:
      return True
def JacksonLeeInterNoise2(mymoves, othermoves, currentRound):
  pattern = [False, False, True, False, False, False, True, False, True, False]
  if currentRound < 10:
    return pattern[currentRound]
  else:
    negatenoise=0
    for i in range(10):
      if othermoves[i]==pattern[i]:
        negatenoise += 1
    if negatenoise >= 8:
      return False
    else:
      return True
def JacksonLeeInterNoise3(mymoves, othermoves, currentRound):
  pattern = [False, False, True, False, False, False, True, False, True, False]
  if currentRound < 10:
    return pattern[currentRound]
  else:
    negatenoise=0
    for i in range(10):
      if othermoves[i]==pattern[i]:
        negatenoise += 1
    if negatenoise >= 8:
      return False
    else:
      return True
def JacksonLeeInterNoise4(mymoves, othermoves, currentRound):
  pattern = [False, False, True, False, False, False, True, False, True, False]
  if currentRound < 10:
    return pattern[currentRound]
  else:
    negatenoise=0
    for i in range(10):
      if othermoves[i]==pattern[i]:
        negatenoise += 1
    if negatenoise >= 8:
      return False
    else:
      return True
def JacksonLeeInterNoise5(mymoves, othermoves, currentRound):
  pattern = [False, False, True, False, False, False, True, False, True, False]
  if currentRound < 10:
    return pattern[currentRound]
  else:
    negatenoise=0
    for i in range(10):
      if othermoves[i]==pattern[i]:
        negatenoise += 1
    if negatenoise >= 8:
      return False
    else:
      return True
def JacksonLeeInterNoise6(mymoves, othermoves, currentRound):
  pattern = [False, False, True, False, False, False, True, False, True, False]
  if currentRound < 10:
    return pattern[currentRound]
  else:
    negatenoise=0
    for i in range(10):
      if othermoves[i]==pattern[i]:
        negatenoise += 1
    if negatenoise >= 8:
      return False
    else:
      return True
def JacksonLeeInterNoise7(mymoves, othermoves, currentRound):
  pattern = [False, False, True, False, False, False, True, False, True, False]
  if currentRound < 10:
    return pattern[currentRound]
  else:
    negatenoise=0
    for i in range(10):
      if othermoves[i]==pattern[i]:
        negatenoise += 1
    if negatenoise >= 8:
      return False
    else:
      return True