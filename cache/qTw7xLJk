def CharlotteStewartAlternate(mymoves, othermoves, currentRound):
  if currentRound == 0:
    return False
  
  if not mymoves [-1]:
    return True

  if not mymoves [-2]:
    return False

def CharlotteStewartAdaptedAlternate(mymoves, othermoves, currentRound):
  randomcount=0
  if currentRound == 0:
    return False
  
  if not mymoves [-1]:
    return True

  if not mymoves [-2]:
    return False

#deadlock checker - if they've been in a back-and-forth for (TEST AMOUNT OF ROUNDS?) then I just cooperate and reset it.
  if othermoves [-1] and not mymoves [-1] and not othermoves [-2] and mymoves [-2] and othermoves [-3] and not mymoves [-3]:
    return False

    #pavlov exploiter idk what this is - try writing out pavlov scenarios with this tit for tat and pavlov and then figuring out how my TFT could exploir that
  if othermoves[-2] and mymoves[-2] and not othermoves [-1]:
    return True

    #titforTwoTats exploiter
  if mymoves [1] and mymoves [2] and not othermoves [0] and not othermoves [1] and not othermoves [2] and othermoves [3]:
      if not mymoves [-1]:
        return True
      if not mymoves [-2]:
        return False

    #random detector
  if currentRound > 9:
      if not othermoves [-1] and not othermoves [-2] and not othermoves [-3]:
        randomcount-=1
      if not othermoves [-1] and othermoves [-2] and not othermoves [-3] and not othermoves [-4] and othermoves [-5]:
        randomcount+=1
      if not othermoves [-1] and othermoves [-2] and not othermoves [-3]:
        randomcount+=1
    
  if randomcount > 4:
    return True
  

def CharlotteStewartTrafficCheckTitForTat(mymoves, othermoves, currentRound):

    randomcount=0
    #Stays silent until the other player rats. If the other player's last move is rat this player only rats for this round.
    if len(othermoves) == 0:
        return False
    if othermoves[-1]:
        return True
    return False

    #deadlock checker - if they've been in a back-and-forth for (TEST AMOUNT OF ROUNDS?) then I just cooperate and reset it.
    if othermoves [-1] and not mymoves [-1] and not othermoves [-2] and mymoves [-2] and othermoves [-3] and not mymoves [-3]:
        return False

    #pavlov exploiter idk what this is - try writing out pavlov scenarios with this tit for tat and pavlov and then figuring out how my TFT could exploir that
    if othermoves[-2] and mymoves[-2] and not othermoves [-1]:
        return True

    #titforTwoTats exploiter
    if mymoves [1] and mymoves [2] and not othermoves [0] and not othermoves [1] and not othermoves [2] and othermoves [3]:
        if not mymoves [-1]:
          return True
        if not mymoves [-2]:
          return False

    #random detector
    if currentRound > 9:
      if not othermoves [-1] and not othermoves [-2] and not othermoves [-3]:
        randomcount-=1
      if not othermoves [-1] and othermoves [-2] and not othermoves [-3] and not othermoves [-4] and othermoves [-5]:
        randomcount+=1
      if not othermoves [-1] and othermoves [-2] and not othermoves [-3]:
        randomcount+=1
    
    if randomcount > 4:
      return True
    
    

  