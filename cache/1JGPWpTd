def TarynHwangTitForTwoTats(mymoves, othermoves, currentRound): #both
  if len(othermoves) == 0:
    return False
  if len(othermoves) >= 2 and (othermoves[-1] and othermoves[-2]):
    return True
  else:
    return False

def TarynHwangTitForThreeTats(mymoves, othermoves, currentRound): #noise
  if len(othermoves) == 0:
    return False
  if len(othermoves) >= 3 and (othermoves[-1] and othermoves[-2] and othermoves[-3]):
    return True
  else:
    return False

def TarynHwangFiveTitsForThreeTats(mymoves, othermoves, currentRound): #nosie
  
  tats = 3
  tits = 5

  for i in range(currentRound):
    if i + tats - 1 < currentRound and i > currentRound - tats - tits and all(othermoves[i:i+tats]):
      return True
  return False

def TarynHwangTwoTitsForFourTats(mymoves, othermoves, currentRound): #noise
  
  tats = 4
  tits = 2

  for i in range(currentRound):
    if i + tats - 1 < currentRound and i > currentRound - tats - tits and all(othermoves[i:i+tats]):
      return True
  return False

def TarynHwangTwoTitsForTwoTats(mymoves, othermoves, currentRound): #noise, forgiving in case of misperception, but still punishes
  
  tats = 2
  tits = 2
  
  for i in range(currentRound):
    if i + tats - 1 < currentRound and i > currentRound - tats - tits and all(othermoves[i:i+tats]):
      return True
  return False

def TarynHwang_TitForTwoTats_Nuke_ThreeInARow(mymoves, othermoves, currentRound): #noise
  #Stays silent until the other player rats twice in a row. If the other player's last 2 moves is rat this player only rats for this round.
  if len(othermoves) < 2:
    return False
  if othermoves[-1] and othermoves[-2]:
    return True
  else:
    tats = 3
    for i in range(currentRound):
      if i + tats - 1 < currentRound and all(othermoves[i:i+tats]):
        return True
    return False

def TarynHwang_Cooperate_Nuke_ThreeInARow(mymoves, othermoves, currentRound): #noise
  tats = 3
  for i in range(currentRound):
    if i + tats - 1 < currentRound and all(othermoves[i:i+tats]):
      return True
  return False

def TarynHwang_Cooperate_Nuke_TwoInARow(mymoves, othermoves, currentRound): #noise
  tats = 2
  for i in range(currentRound):
    if i + tats - 1 < currentRound and all(othermoves[i:i+tats]):
      return True
  return False