def LeoStollOmegaTFT(mymoves, othermoves, currentRound):
  mainHandshake = [False, True, False, False, True, False]
  feederHandshake = [True, False, False, True, False, True]
  aryanHandshake1 = [True, False, True, True, False, False]
  aryanHandshake2 = [False, True, False, True, False, False]
  deadlockThreshold = 3
  randomnessThreshold = 15
  randomnessMeasure = 0
  
  if currentRound == 199:
    return True

  if currentRound <= 2:
    if currentRound == 0:
      return False
    else:
      return othermoves[-1]

  if currentRound < 3+len(mainHandshake) and currentRound > 2:
    return mainHandshake[currentRound-3]

  if othermoves[3:3+len(mainHandshake)] == mainHandshake:
    return False

  if othermoves[:len(aryanHandshake1)] == aryanHandshake1:
      return True

  if othermoves[:len(aryanHandshake2)] == aryanHandshake2:
      return True

  else:
    if othermoves[:len(feederHandshake)] == feederHandshake:
      return True
    if any((othermoves[i-1] and not othermoves[i-2] and othermoves[i-3] and not othermoves[i-4]) for i in range(len(othermoves)-4)):
      return True
    else:
      #deadlock detector
      if currentRound > 3 and min(abs(othermoves[i] - othermoves[i-1]) for i in range(-deadlockThreshold, -1)):
        return False
      else:
        for i in range(len(othermoves)-1):
          if not othermoves[-1-i] and not othermoves[-2-i]:
            randomnessMeasure -= 1
          if othermoves[-1-i] != othermoves[-2-i]:
            randomnessMeasure += 1
          if othermoves[-i] != mymoves[-i]:
            randomnessMeasure += 1
        if randomnessMeasure >= randomnessThreshold:
          return True
        else:
          if currentRound == 0:
            return False
          else:
            return othermoves[-1]

def LeoStollOmegaTFTfeeder1(mymoves, othermoves, currentRound):
  mainHandshake = [False, True, False, False, True, False]
  feederHandshake = [True, False, False, True, False, True]

  if currentRound < len(feederHandshake):
      return feederHandshake[currentRound]

  else:
    if othermoves[3:3+len(mainHandshake)] == mainHandshake:
      return False
    else:
      return True

def LeoStollOmegaTFTfeeder2(mymoves, othermoves, currentRound):
  mainHandshake = [False, True, False, False, True, False]
  feederHandshake = [True, False, False, True, False, True]

  if currentRound < len(feederHandshake):
      return feederHandshake[currentRound]

  else:
    if othermoves[3:3+len(mainHandshake)] == mainHandshake:
      return False
    else:
      return True

def LeoStollOmegaTFTfeeder3(mymoves, othermoves, currentRound):
  mainHandshake = [False, True, False, False, True, False]
  feederHandshake = [True, False, False, True, False, True]

  if currentRound < len(feederHandshake):
      return feederHandshake[currentRound]

  else:
    if othermoves[3:3+len(mainHandshake)] == mainHandshake:
      return False
    else:
      return True

def LeoStollOmegaTFTfeeder4(mymoves, othermoves, currentRound):
  mainHandshake = [False, True, False, False, True, False]
  feederHandshake = [True, False, False, True, False, True]

  if currentRound < len(feederHandshake):
      return feederHandshake[currentRound]

  else:
    if othermoves[3:3+len(mainHandshake)] == mainHandshake:
      return False
    else:
      return True

def LeoStollOmegaTFTfeeder5(mymoves, othermoves, currentRound):
  mainHandshake = [False, True, False, False, True, False]
  feederHandshake = [True, False, False, True, False, True]

  if currentRound < len(feederHandshake):
      return feederHandshake[currentRound]

  else:
    if othermoves[3:3+len(mainHandshake)] == mainHandshake:
      return False
    else:
      return True

def LeoStollOmegaTFTfeeder6(mymoves, othermoves, currentRound):
  mainHandshake = [False, True, False, False, True, False]
  feederHandshake = [True, False, False, True, False, True]

  if currentRound < len(feederHandshake):
      return feederHandshake[currentRound]

  else:
    if othermoves[3:3+len(mainHandshake)] == mainHandshake:
      return False
    else:
      return True

def LeoStollOmegaTFTfeeder7(mymoves, othermoves, currentRound):
  mainHandshake = [False, True, False, False, True, False]
  feederHandshake = [True, False, False, True, False, True]

  if currentRound < len(feederHandshake):
      return feederHandshake[currentRound]

  else:
    if othermoves[3:3+len(mainHandshake)] == mainHandshake:
      return False
    else:
      return True

def LeoStollOmegaTFTfeeder8(mymoves, othermoves, currentRound):
  mainHandshake = [False, True, False, False, True, False]
  feederHandshake = [True, False, False, True, False, True]

  if currentRound < len(feederHandshake):
      return feederHandshake[currentRound]

  else:
    if othermoves[3:3+len(mainHandshake)] == mainHandshake:
      return False
    else:
      return True

def LeoStollOmegaTFTfeeder9(mymoves, othermoves, currentRound):
  mainHandshake = [False, True, False, False, True, False]
  feederHandshake = [True, False, False, True, False, True]

  if currentRound < len(feederHandshake):
      return feederHandshake[currentRound]

  else:
    if othermoves[3:3+len(mainHandshake)] == mainHandshake:
      return False
    else:
      return True