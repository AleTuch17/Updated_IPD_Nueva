def JacksonLeeMasterNoNoise(mymoves, othermoves, currentRound):
  pattern = [False, False, False, False, False, True, False, True, False]
  #always betray on the last round
  if currentRound == 199:
    return True
  #handshake
  if currentRound < 9:
    return pattern[currentRound]
  else:
    if othermoves[:7] == pattern[:7]:
      return True
    else:
      #in case im getting nuked
      for i in range(len(othermoves) - 4):
        if othermoves[i:i+4] == [True,True,True,True]:
            return True
      #in case im getting alternated
      if currentRound > 15:
        randomChecker = 0
        for a in range(10, len(othermoves)):
          if othermoves[a]:
            randomChecker+=1
          else:
            randomChecker-=1
        if abs(randomChecker) <= currentRound/20:
          return True
      #pavlov
      if [othermoves[-1]]:
        return not mymoves[-1]
      else:
        return mymoves[-1]

def JacksonLeeInterNoNoise1(mymoves, othermoves, currentRound):
  pattern = [False, False, False, False, False, True, False, True, False]
  if currentRound < 9:
    return pattern[currentRound]
  else:
    if othermoves[:9] == pattern:
      return False
    else:
      return True
def JacksonLeeInterNoNoise2(mymoves, othermoves, currentRound):
  pattern = [False, False, False, False, False, True, False, True, False]
  if currentRound < 9:
    return pattern[currentRound]
  else:
    if othermoves[:9] == pattern:
      return False
    else:
      return True
def JacksonLeeInterNoNoise3(mymoves, othermoves, currentRound):
  pattern = [False, False, False, False, False, True, False, True, False]
  if currentRound < 9:
    return pattern[currentRound]
  else:
    if othermoves[:9] == pattern:
      return False
    else:
      return True
def JacksonLeeInterNoNoise4(mymoves, othermoves, currentRound):
  pattern = [False, False, False, False, False, True, False, True, False]
  if currentRound < 9:
    return pattern[currentRound]
  else:
    if othermoves[:9] == pattern:
      return False
    else:
      return True
def JacksonLeeInterNoNoise5(mymoves, othermoves, currentRound):
  pattern = [False, False, False, False, False, True, False, True, False]
  if currentRound < 9:
    return pattern[currentRound]
  else:
    if othermoves[:9] == pattern:
      return False
    else:
      return True
def JacksonLeeInterNoNoise6(mymoves, othermoves, currentRound):
  pattern = [False, False, False, False, False, True, False, True, False]
  if currentRound < 9:
    return pattern[currentRound]
  else:
    if othermoves[:9] == pattern:
      return False
    else:
      return True
def JacksonLeeInterNoNoise7(mymoves, othermoves, currentRound):
  pattern = [False, False, False, False, False, True, False, True, False]
  if currentRound < 9:
    return pattern[currentRound]
  else:
    if othermoves[:9] == pattern:
      return False
    else:
      return True
def JacksonLeeInterNoNoise8(mymoves, othermoves, currentRound):
  pattern = [False, False, False, False, False, True, False, True, False]
  if currentRound < 9:
    return pattern[currentRound]
  else:
    if othermoves[:9] == pattern:
      return False
    else:
      return True
def JacksonLeeInterNoNoise9(mymoves, othermoves, currentRound):
  pattern = [False, False, False, False, False, True, False, True, False]
  if currentRound < 9:
    return pattern[currentRound]
  else:
    if othermoves[:9] == pattern:
      return False
    else:
      return True