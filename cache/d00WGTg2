def KerrieZhuForgivingTitForTat(mymoves, othermoves, currentRound):
  #(For noise)Stays silent until other player rats and then will rat. If other player rats two times, will forgive and stay silent.
    if len(othermoves) == 0:
        return False
    if othermoves[-1]:
        return False
    if currentRound > 3 and othermoves[-1] and othermoves[-2]:
        return True
    else:
        return False

def KerrieZhutitForTwotats(mymoves, othermoves, currentRound):
    #Stays silent until the other player rats twice in a row. If the other player's last 2 moves is rat this player only rats for this round. 
    if len(othermoves) < 2:
        return False
    if othermoves[-1] and othermoves[-2]:
        return True
    else:
        return False

def KerrieZhualternator(mymoves, othermoves, currentRound):
  if len(othermoves) == 0:
    return False
  return False
  if othermoves[-1]:
    return True
  else:
    return False

def KerrieZhuRandom(mymoves, othermoves, currentRound):
    #Chooses kinda randomly. Change the variable below to tell it how often to rat
    randomness = 0.9
    randNumber = random.random()
    if randNumber < randomness:
        return True
    return False

def titForSeventats(mymoves, othermoves, currentRound):
    #Stays silent until the other player rats twice in a row. If the other player's last 7 moves is rat this player only rats.
    if len(othermoves) < 2:
        return False
    if othermoves[-1] and othermoves[-2] and othermoves[-3] and othermoves[-4] and othermoves[-5] and othermoves[-6]:
        return True
    else:
        return False