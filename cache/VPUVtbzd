def NathanLeeOmnicronKey (mymoves, othermoves, currentRound):
  if currentRound == 0:
    return True
  if currentRound == 1:
    return False
  if currentRound == 2:
    return True
  if currentRound == 3:
    return False
  if currentRound == 4:
    return False
  if currentRound ==5:
    return True #set of moves to identify
  if 15<othermoves.count(True) <20:
      return False
  if 20 == othermoves.count(True):
    return True
  else:
    if othermoves [-1] and othermoves [-2] and othermoves [-3] and othermoves [-4]:#rat counter
      return True
    if not othermoves [-1] and othermoves [-2] and othermoves [-3] and othermoves [-4] and othermoves [-5]:
      return False
    if othermoves [-1] == mymoves [-2] and othermoves [-2] == mymoves [-3] and othermoves [-3] == mymoves[-4]:
      return False
    if othermoves [-currentRound] and not othermoves [-currentRound+1] and othermoves [-currentRound+2] and not othermoves [-currentRound+3] and not othermoves [-currentRound+4] and othermoves [-currentRound+5]:
      return False
    if othermoves [-currentRound] and othermoves [-currentRound+1] and othermoves [-currentRound+2] and not othermoves [-currentRound+3] and othermoves [-currentRound+4]:
      return True
    if othermoves [-1] and not othermoves [-2] and othermoves [-3] and not othermoves [-4] and othermoves [-5] and not othermoves [-6]:
      return True
    if not othermoves [-1] and othermoves [-2] and not othermoves [-3] and othermoves [-4] and not othermoves [-5] and othermoves [-6]:
      return True
    if not othermoves [-1] and othermoves [-2] and othermoves [-3] and othermoves [-4]:
      return False
    if currentRound >= 150:
      if not othermoves [-1]:
        return True
      else:
        if currentRound % 2 == 0:
          return False
        else:
          return True
    else:
      if currentRound % 2 == 0:
        return False
      else:
        return True

def NathanLeeOmnicronBot1 (mymoves, othermoves, currentRound):
  if currentRound == 0:
    return True
  if currentRound == 1:
    return True
  if currentRound == 2:
    return True
  if currentRound == 3:
    return False
  if currentRound == 4:
    return True
  else:
    if othermoves [-currentRound] and not othermoves [-currentRound+1] and othermoves [-currentRound+2] and not othermoves [-currentRound+3] and not othermoves [-currentRound+4]and othermoves [-currentRound+5]:
      return False
    else:
      return True

def NathanLeeOmnicronBot2 (mymoves, othermoves, currentRound):
  if currentRound == 0:
    return True
  if currentRound == 1:
    return True
  if currentRound == 2:
    return True
  if currentRound == 3:
    return False
  if currentRound == 4:
    return True
  else:
    if othermoves [-currentRound] and not othermoves [-currentRound+1] and othermoves [-currentRound+2] and not othermoves [-currentRound+3] and not othermoves [-currentRound+4]and othermoves [-currentRound+5]:
      return False
    else:
      return True

def NathanLeeOmnicronBot3 (mymoves, othermoves, currentRound):
  if currentRound == 0:
    return True
  if currentRound == 1:
    return True
  if currentRound == 2:
    return True
  if currentRound == 3:
    return False
  if currentRound == 4:
    return True
  else:
    if othermoves [-currentRound] and not othermoves [-currentRound+1] and othermoves [-currentRound+2] and not othermoves [-currentRound+3] and not othermoves [-currentRound+4]and othermoves [-currentRound+5]:
      return False
    else:
      return True

def NathanLeeOmnicronBot4 (mymoves, othermoves, currentRound):
  if currentRound == 0:
    return True
  if currentRound == 1:
    return True
  if currentRound == 2:
    return True
  if currentRound == 3:
    return False
  if currentRound == 4:
    return True
  else:
    if othermoves [-currentRound] and not othermoves [-currentRound+1] and othermoves [-currentRound+2] and not othermoves [-currentRound+3] and not othermoves [-currentRound+4]and othermoves [-currentRound+5]:
      return False
    else:
      return True

def NathanLeeOmnicronBot5 (mymoves, othermoves, currentRound):
  if currentRound == 0:
    return True
  if currentRound == 1:
    return True
  if currentRound == 2:
    return True
  if currentRound == 3:
    return False
  if currentRound == 4:
    return True
  else:
    if othermoves [-currentRound] and not othermoves [-currentRound+1] and othermoves [-currentRound+2] and not othermoves [-currentRound+3] and not othermoves [-currentRound+4]and othermoves [-currentRound+5]:
      return False
    else:
      return True

def NathanLeeOmnicronBot6 (mymoves, othermoves, currentRound):
  if currentRound == 0:
    return True
  if currentRound == 1:
    return True
  if currentRound == 2:
    return True
  if currentRound == 3:
    return False
  if currentRound == 4:
    return True
  else:
    if othermoves [-currentRound] and not othermoves [-currentRound+1] and othermoves [-currentRound+2] and not othermoves [-currentRound+3] and not othermoves [-currentRound+4]and othermoves [-currentRound+5]:
      return False
    else:
      return True

def NathanLeeOmnicronBot7 (mymoves, othermoves, currentRound):
  if currentRound == 0:
    return True
  if currentRound == 1:
    return True
  if currentRound == 2:
    return True
  if currentRound == 3:
    return False
  if currentRound == 4:
    return True
  else:
    if othermoves [-currentRound] and not othermoves [-currentRound+1] and othermoves [-currentRound+2] and not othermoves [-currentRound+3] and not othermoves [-currentRound+4]and othermoves [-currentRound+5]:
      return False
    else:
      return True

def NathanLeeOmnicronBot8 (mymoves, othermoves, currentRound):
  if currentRound == 0:
    return True
  if currentRound == 1:
    return True
  if currentRound == 2:
    return True
  if currentRound == 3:
    return False
  if currentRound == 4:
    return True
  else:
    if othermoves [-currentRound] and not othermoves [-currentRound+1] and othermoves [-currentRound+2] and not othermoves [-currentRound+3] and not othermoves [-currentRound+4]and othermoves [-currentRound+5]:
      return False
    else:
      return True

def NathanLeeOmnicronBot9 (mymoves, othermoves, currentRound):
  if currentRound == 0:
    return True
  if currentRound == 1:
    return True
  if currentRound == 2:
    return True
  if currentRound == 3:
    return False
  if currentRound == 4:
    return True
  else:
    if othermoves [-currentRound] and not othermoves [-currentRound+1] and othermoves [-currentRound+2] and not othermoves [-currentRound+3] and not othermoves [-currentRound+4]and othermoves [-currentRound+5]:
      return False
    else:
      return True