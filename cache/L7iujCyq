 def NatalieLaiKindaRandomAlternatorwithsomenuke(mymoves, othermoves, currentRound):
    if currentRound%2 ==0:
      return True
    return False
    if i:
      num_of_betray += 1
      randomness = 0.9 
      randNumber = random.random()
    if randNumber < randomness:
		    return True
    for i in othermoves:
      if i:
        num_of_betray += 1
    print(num_of_betray)
    if num_of_betray > 19:
      return True
    return False
def NatalieLaikindaRandomtitFortat(mymoves, othermoves, currentRound):
    if len(othermoves) == 0:
      return False
    if othermoves[-1]:
      randomness = 0.9 
      randNumber = random.random()
      if randNumber < randomness:
        return True
    return False
 
def NatalieLaikindaRandomtitFortat(mymoves, othermoves, currentRound):
    if len(othermoves) == 0:
      return False
    if othermoves[-1]:
      randomness = 0.9 
      randNumber = random.random()
      if randNumber < randomness:
        return True
    return False
 
def NatalieLaikindaRandomtitFortat(mymoves, othermoves, currentRound):
    if len(othermoves) == 0:
      return False
    if othermoves[-1]:
      randomness = 0.9 
      randNumber = random.random()
      if randNumber < randomness:
        return True
    return False
 
def NatalieLainukeforThreetats (mymoves, othermoves, currentRound):
   #Stays silent until the other player rats thrice. If the other player's rats twice this player rats forever. 
    if len(othermoves) < 2:
        return False
    num_of_betray = 0
    for i in othermoves:
      if i:
        num_of_betray += 1
    print(num_of_betray)
    if num_of_betray > 2:
      return True
    else:
      return False
 
def NatalieLainukeforThreetats (mymoves, othermoves, currentRound):
   #Stays silent until the other player rats thrice. If the other player's rats twice this player rats forever. 
    if len(othermoves) < 2:
        return False
    num_of_betray = 0
    for i in othermoves:
      if i:
        num_of_betray += 1
    print(num_of_betray)
    if num_of_betray > 2:
      return True
    else:
      return False
 
def NatalieLaialternator (mymoves, othermoves, currentRound):
  if currentRound%2 == 0:
    return False 
  return True
 
def NatalieLainukeForFivetats(mymoves, othermoves, currentRound):
    #Stays silent until the other player rats twice. If the other player's rats twice this player rats forever. 
    if len(othermoves) < 2:
        return False
    num_of_betray = 0
    for i in othermoves:
      if i:
        num_of_betray += 1
    print(num_of_betray)
    if num_of_betray > 4: #you can change the 4 here to make this a nukeForXtats (remember that the number here should be one less than the number of tats)
      return True
    else:
      return False
 
def NatalieLaialternator (mymoves, othermoves, currentRound):
  if currentRound%2 == 0:
    return False 
  return True
 
def NatalieLaialternator (mymoves, othermoves, currentRound):
  if currentRound%2 == 0:
    return False 
  return True
 
 
def NatalieLaialternator (mymoves, othermoves, currentRound):
  if currentRound%2 == 0:
    return False 
  return True
 