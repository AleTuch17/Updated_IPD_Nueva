def JuliaChenJCtried(mymoves, othermoves, currentRound):
    if len(othermoves) < 4:
      return False
    if othermoves[-1] and mymoves[-2]:
      return True
    if len(othermoves) < 10:
      return False
    if othermoves[-1]and not othermoves[-2] and othermoves[-3] and not othermoves[-4] and othermoves[-5]and not othermoves[-6] and othermoves[-7] and not othermoves[-8] and othermoves[-9]:
      return False
    if len(othermoves) < 8:
      return True
    if not othermoves[-1]and othermoves[-2] and not othermoves[-3] and othermoves[-4] and not othermoves[-5]and othermoves[-6] and not othermoves[-7] and othermoves[-8] and not othermoves[-9]:
      return False
    if othermoves[-1] and othermoves[-2]:
      return True
    else:
        return False

def JuliaChenStrange(mymoves, othermoves, currentRound):
    if len(othermoves) < 4:
      return False
    if othermoves[-1] and mymoves[-2]:
      return True
    if len(othermoves) < 6:
      return False
    if not othermoves[-1] and not othermoves[-2] and not othermoves [-3] and not othermoves[-4] and not othermoves [-5]:
      return True
    if not othermoves[-2] and othermoves[-1]:
      return True
    if not othermoves[-1]:
      return False
    if len(othermoves)< 8:
      return False
    if othermoves[-1] and othermoves [-2] and othermoves[-3] and othermoves[-4] and othermoves[-5] and othermoves[-6]and othermoves[-7] and mymoves[-1] and mymoves [-2] and mymoves[-3] and mymoves[-4] and mymoves[-5] and mymoves[-6]and mymoves[-7]:
        return False
    if len(othermoves) > 170:
        return False
    else:
      return False

def JuliaChenForgive(mymoves, othermoves, currentRound):
    if len(othermoves) == 0:
      return False
    if len(othermoves) < 4:
      return False
    if othermoves[-1] and othermoves [-2] and othermoves[-3]:
        return True
    if othermoves[-1] and othermoves [-2] and othermoves[-3] and othermoves[-4] and othermoves[-5] and othermoves[-6]and othermoves[-7] and mymoves[-1] and mymoves [-2] and mymoves[-3] and mymoves[-4] and mymoves[-5] and mymoves[-6]and mymoves[-7]:
        return False
    if len(othermoves) < 8:
        return False
    if othermoves[-1] and not othermoves [-2] and othermoves[-3] and not othermoves[-4] and othermoves[-5] and not othermoves[-6]and othermoves[-7] and not mymoves[-1] and mymoves [-2] and not mymoves[-3] and mymoves[-4] and not mymoves[-5] and mymoves[-6]and notmymoves[-7]:
        return False
    else:
      return False