def VincaLuAltNoisy(mymoves, othermoves, currentRound):
  wrong = 0
  seq = [False, False, True, False, True, True, False, False, True, True, True, False, False]
  if currentRound < 13:
    return seq[currentRound]
  if currentRound >= 13:
      for i in range(0, currentRound):
        if othermoves[i] == True:
          wrong += 1
      if wrong > int(currentRound/10):
        if (currentRound % 2) == 0:
          return False
        else:
          return True
      else:
        return True

def VincaLubot1noise(mymoves, othermoves, currentRound):
    seq = [False, False, True, False, True, True, False, False, True, True, True, False, False]
    mysol = True
    wrong = 0
    if currentRound < 13:
      return False
    #if currentRound == 6:
      #return True
    if currentRound >= 13:
      for i in range(0, 13):
        if othermoves[i] != seq[i]:
          wrong += 1
      if wrong > 3:
        return True
      else:
        return False

def VincaLubot2noise(mymoves, othermoves, currentRound):
    seq = [False, False, True, False, True, True, False, False, True, True, True, False, False]
    mysol = True
    wrong = 0
    if currentRound < 13:
      return False
    #if currentRound == 6:
      #return True
    if currentRound >= 13:
      for i in range(0, 13):
        if othermoves[i] != seq[i]:
          wrong += 1
      if wrong > 4:
        return True
      else:
        return False

def VincaLubot3noise(mymoves, othermoves, currentRound):
    seq = [False, False, True, False, True, True, False, False, True, True, True, False, False]
    mysol = True
    wrong = 0
    if currentRound < 13:
      return False
    if currentRound >= 13:
      for i in range(0, 13):
        if othermoves[i] != seq[i]:
          wrong += 1
      if wrong > 5:
        return True
      else:
        return False

def VincaLubot4noise(mymoves, othermoves, currentRound):
    seq = [False, False, True, False, True, True, False, False, True, True, True, False, False]
    mysol = True
    wrong = 0
    if currentRound < 13:
      return False
    if currentRound >= 13:
      for i in range(0, 13):
        if othermoves[i] != seq[i]:
          wrong += 1
      if wrong > 4:
        return True
      else:
        return False

def VincaLubot5noise(mymoves, othermoves, currentRound):
    seq = [False, False, True, False, True, True, False, False, True, True, True, False, False]
    mysol = True
    wrong = 0
    if currentRound < 13:
      return False
    if currentRound >= 13:
      for i in range(0, 13):
        if othermoves[i] != seq[i]:
          wrong += 1
      if wrong > 3:
        return True
      else:
        return False

def VincaLubot6noise(mymoves, othermoves, currentRound):
    seq = [False, False, True, False, True, True, False, False, True, True, True, False, False]
    mysol = True
    wrong = 0
    if currentRound < 13:
      return False
    if currentRound >= 13:
      for i in range(0, 13):
        if othermoves[i] != seq[i]:
          wrong += 1
      if wrong > 4:
        return True
      else:
        return False

def VincaLubot7noise(mymoves, othermoves, currentRound):
    seq = [False, False, True, False, True, True, False, False, True, True, True, False, False]
    mysol = True
    wrong = 0
    if currentRound < 13:
      return False
    if currentRound >= 13:
      for i in range(0, 13):
        if othermoves[i] != seq[i]:
          wrong += 1
      if wrong > 5:
        return True
      else:
        return False

def VincaLubot8noise(mymoves, othermoves, currentRound):
    seq = [False, False, True, False, True, True, False, False, True, True, True, False, False]
    mysol = True
    wrong = 0
    if currentRound < 13:
      return False
    if currentRound >= 13:
      for i in range(0, 13):
        if othermoves[i] != seq[i]:
          wrong += 1
      if wrong > 4:
        return True
      else:
        return False

def VincaLubot9noise(mymoves, othermoves, currentRound):
    seq = [False, False, True, False, True, True, False, False, True, True, True, False, False]
    mysol = True
    wrong = 0
    if currentRound < 13:
      return False
    if currentRound >= 13:
      for i in range(0, 13):
        if othermoves[i] != seq[i]:
          wrong += 1
      if wrong > 3:
        return True
      else:
        return False