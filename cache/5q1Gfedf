def AaryaSachdev2stratschanger(mymoves, othermoves, currentRound):
    #alternating strats of tit for tat ==> OG pavlov ==> rev:titfortat
    #my best strat for both noise and no noise
  if len(othermoves) == 0:
      return True
  if ((currentRound>0) and ((currentRound)%3==1)): #if current round number / 3 has a remander of one:
    if othermoves[-1]:
      return True
    else:
      return False
  if (currentRound>0) and ((currentRound)%3==2): #if current round number / 3 has a remander of two
    if othermoves[-1]:
        return False
    else:
      return True
  if ((currentRound>0) and ((currentRound)%3==0)): #if current round number / 3 has a remander of 0
    if len(othermoves) == 1:
      return True
      return True
    return False
  return False

def AaryaSachdevRevTit4Tat(mymoves, othermoves, currentRound):
#stays silent//cooperate until othermoves T then i T for this round ONLY
  if len(othermoves) == 0:
        return True
  if othermoves[-1]:
        return False
  return True

def AaryaSachdevDetective(mymoves, othermoves, currentRound):
  #replicating the simulation detective/non cooperative strat
  if len(othermoves) == 0:
    return False
  if currentRound==1:
    return True
  if (currentRound==2) or (currentRound==3):
    return False
  if currentRound > 3:
    if othermoves[-1]:
      return True
    else:
      return False

def AaryaSachdevNukeForThreeTats(mymoves, othermoves, currentRound):
    #Stays silent until the other player rats three times. If the other player's rats two times this player rats forever.
    #harsh, unforgiving good for no noise
    if len(othermoves) == 0:
      return False
    num_of_betray = 0
    for i in othermoves:
      if i:
        num_of_betray += 1
    if num_of_betray > 3:
      return True
    else:
      return False

def AaryaSachdevRat70percent(mymoves, othermoves, currentRound):
    #Chooses kinda randomly. 

    randNumber = random.random()
    if randNumber < randomness:
        return True
    return False

def AaryaSachdevNukeForFivetats(mymoves, othermoves, currentRound):
    #Stays silent until the other player rats five times. If the other player's rats 5 times this player rats forever.
    if len(othermoves) == 0:
      return False
    num_of_betray = 0
    for i in othermoves:
      if i:
        num_of_betray += 1
    if num_of_betray > 4: #you can change the 4 here to make this a nukeForXtats (remember that the number here should be one less than the number of tats)
      return True
    else:
      return False

def AaryaSachdevNukeForSevenTats(mymoves, othermoves, currentRound):
    #Stays silent until the other player rats five times. If the other player's rats 7 times this player rats forever.
    if len(othermoves) == 0:
      return False
    num_of_betray = 0
    for i in othermoves:
      if i:
        num_of_betray += 1
    if num_of_betray > 6: #you can change the 4 here to make this a nukeForXtats (remember that the number here should be one less than the number of tats)
      return True
    else:
      return False

def AaryaSachdevNukeForTwentyTats(mymoves, othermoves, currentRound):
    #Stays silent until the other player rats five times. If the other player's rats 25 times this player rats forever.
    if len(othermoves) == 0:
      return False
    num_of_betray = 0
    for i in othermoves:
      if i:
        num_of_betray += 1
    if num_of_betray > 19: #you can change the 4 here to make this a nukeForXtats (remember that the number here should be one less than the number of tats)
      return True
    else:
      return False

def AaryaSachdevNukeForFifteenTats(mymoves, othermoves, currentRound):
    #Stays silent until the other player rats five times. If the other player's rats 15 times this player rats forever.
    if len(othermoves) == 0:
      return False
    num_of_betray = 0
    for i in othermoves:
      if i:
        num_of_betray += 1
    if num_of_betray > 14: #you can change the 4 here to make this a nukeForXtats (remember that the number here should be one less than the number of tats)
      return True
    else:
      return False

def AaryaSachdevNukeForSixTats(mymoves, othermoves, currentRound):
    #Stays silent until the other player rats five times. If the other player's rats 5 times this player rats forever.
    if len(othermoves) == 0:
      return False
    num_of_betray = 0
    for i in othermoves:
      if i:
        num_of_betray += 1
    if num_of_betray > 5: #you can change the 4 here to make this a nukeForXtats (remember that the number here should be one less than the number of tats)
      return True
    else:
      return False