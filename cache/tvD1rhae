def AlistairWenCleanSlaverWSLS(mymoves, othermoves, currentRound):
    #Always betray on round 200
    if currentRound == 199:
        return True
    #Define Passwords
    WinBotList = [True, True, True, False, False, True, True, False]
    LoseBotList = [False, False, False, True, False, True, True, False]
    #Assume opponent is Friend and Self until further notice
    Friend=True
    Self=True
    #then check
    for i in range(min(8,currentRound)):
      if(LoseBotList[i] != othermoves[i]):
        Friend = False
    for i in range(min(8,currentRound)):
      if(WinBotList[i] != othermoves[i]):
        Self=False
    if (currentRound < 8 and (Friend or Self)):
      return WinBotList[currentRound]
    if (Self):
      return False
    if (Friend):
      return True
    else:
      #Win Stay Lose Shift
      if currentRound == 0 or (not mymoves[-1]) and (not othermoves[-1]):
        return False
      else:
        return True

def AlistairWenCleanFeeder1(mymoves, othermoves, currentRound):
  #Defines a pattern to prove identity
    WinBotList = [True, True, True, False, False, True, True, False]
    LoseBotList = [False, False, False, True, False, True, True, False]
    Friend=True
    for i in range(min(8,currentRound)):
      if(WinBotList[i] != othermoves[i]):
        Friend = False

    if (currentRound < 8 and Friend):
      #For the first 8 rounds follow the script as long as the opponent also followed
      return LoseBotList[currentRound]
    elif(Friend):
      return False
    else:
      return True

def AlistairWenCleanFeeder2(mymoves, othermoves, currentRound):
  #Defines a pattern to prove identity
    WinBotList = [True, True, True, False, False, True, True, False]
    LoseBotList = [False, False, False, True, False, True, True, False]
    Friend=True
    for i in range(min(8,currentRound)):
      if(WinBotList[i] != othermoves[i]):
        Friend = False

    if (currentRound < 8 and Friend):
      #For the first 8 rounds follow the script as long as the opponent also followed
      return LoseBotList[currentRound]
    elif(Friend):
      return False
    else:
      return True

def AlistairWenCleanFeeder3(mymoves, othermoves, currentRound):
  #Defines a pattern to prove identity
    WinBotList = [True, True, True, False, False, True, True, False]
    LoseBotList = [False, False, False, True, False, True, True, False]
    Friend=True
    for i in range(min(8,currentRound)):
      if(WinBotList[i] != othermoves[i]):
        Friend = False

    if (currentRound < 8 and Friend):
      #For the first 8 rounds follow the script as long as the opponent also followed
      return LoseBotList[currentRound]
    elif(Friend):
      return False
    else:
      return True

def AlistairWenCleanFeeder4(mymoves, othermoves, currentRound):
  #Defines a pattern to prove identity
    WinBotList = [True, True, True, False, False, True, True, False]
    LoseBotList = [False, False, False, True, False, True, True, False]
    Friend=True
    for i in range(min(8,currentRound)):
      if(WinBotList[i] != othermoves[i]):
        Friend = False

    if (currentRound < 8 and Friend):
      #For the first 8 rounds follow the script as long as the opponent also followed
      return LoseBotList[currentRound]
    elif(Friend):
      return False
    else:
      return True

def AlistairWenCleanFeeder5(mymoves, othermoves, currentRound):
  #Defines a pattern to prove identity
    WinBotList = [True, True, True, False, False, True, True, False]
    LoseBotList = [False, False, False, True, False, True, True, False]
    Friend=True
    for i in range(min(8,currentRound)):
      if(WinBotList[i] != othermoves[i]):
        Friend = False

    if (currentRound < 8 and Friend):
      #For the first 8 rounds follow the script as long as the opponent also followed
      return LoseBotList[currentRound]
    elif(Friend):
      return False
    else:
      return True

def AlistairWenCleanFeeder6(mymoves, othermoves, currentRound):
  #Defines a pattern to prove identity
    WinBotList = [True, True, True, False, False, True, True, False]
    LoseBotList = [False, False, False, True, False, True, True, False]
    Friend=True
    for i in range(min(8,currentRound)):
      if(WinBotList[i] != othermoves[i]):
        Friend = False

    if (currentRound < 8 and Friend):
      #For the first 8 rounds follow the script as long as the opponent also followed
      return LoseBotList[currentRound]
    elif(Friend):
      return False
    else:
      return True

def AlistairWenCleanFeeder7(mymoves, othermoves, currentRound):
  #Defines a pattern to prove identity
    WinBotList = [True, True, True, False, False, True, True, False]
    LoseBotList = [False, False, False, True, False, True, True, False]
    Friend=True
    for i in range(min(8,currentRound)):
      if(WinBotList[i] != othermoves[i]):
        Friend = False

    if (currentRound < 8 and Friend):
      #For the first 8 rounds follow the script as long as the opponent also followed
      return LoseBotList[currentRound]
    elif(Friend):
      return False
    else:
      return True

def AlistairWenCleanFeeder8(mymoves, othermoves, currentRound):
  #Defines a pattern to prove identity
    WinBotList = [True, True, True, False, False, True, True, False]
    LoseBotList = [False, False, False, True, False, True, True, False]
    Friend=True
    for i in range(min(8,currentRound)):
      if(WinBotList[i] != othermoves[i]):
        Friend = False

    if (currentRound < 8 and Friend):
      #For the first 8 rounds follow the script as long as the opponent also followed
      return LoseBotList[currentRound]
    elif(Friend):
      return False
    else:
      return True

def AlistairWenCleanFeeder9(mymoves, othermoves, currentRound):
  #Defines a pattern to prove identity
    WinBotList = [True, True, True, False, False, True, True, False]
    LoseBotList = [False, False, False, True, False, True, True, False]
    Friend=True
    for i in range(min(8,currentRound)):
      if(WinBotList[i] != othermoves[i]):
        Friend = False

    if (currentRound < 8 and Friend):
      #For the first 8 rounds follow the script as long as the opponent also followed
      return LoseBotList[currentRound]
    elif(Friend):
      return False
    else:
      return True
